Spatial Data in R 1: Load Spatial Data Set, read in weights, create weights, spatial correlation

Packages: There are somewhere on the order of 10,000 packages (add-ins) that people have written to add functionality to R. Good overview of spatial-related packages:
https://cran.r-project.org/web/views/Spatial.html  Google cran task view spatial data
Roger Bivand!!!

Packages: spdep, rgdal (for readOGR) 

Our Tasks Today: 

1) Download and Install R, then RStudio (both free)
2) Download the new version of the Spatial Data set, OR:
   Save SHP with short name, no spaces
   Open with GeoDa, save as, do not create project 
   Recreate queen1.gal
3) a) Open RStudio and create new project, existing folder
   b) File, new file, R Script 
4) Download Libraries: spdep (most spatial analysis we will be doing)
                       rgdal (for readOGR)

Tools, Install Packages... (These only need to be downloaded once, but read in with the library command below each session you use them)
library(spdep)
library(rgdal)

3) Read in SHP file

NCVACO <- readOGR(dsn = ".", layer = "NCVACO")
queen.nb=read.gal("queen1.gal", region.id=NCVACO$FIPS)
summary(queen.nb)

*Now let's recreate the contiguity or "neighbors" file in R, just to show that you can:
queen.R.nb=poly2nb(NCVACO)    # Rook would be rook.R.nb=poly2nb(NCVACO,queen=FALSE)

*Now compare the two, see if they are the same:
isTRUE(all.equal(queen.nb,queen.R.nb,check.attributes=FALSE))
summary(queen.R.nb)
#same, except for row names- lets add correct row names!
queen.R.nb=poly2nb(NCVACO,row.names=NCVACO$FIPS)
is.symmetric.nb(queen.nb)

*There are lots of different ways people store weights matrices and contiguity files:
*nb "neighbor file"
*neigh "another kind of neighbor file" common in ecology (e.g. package ade4)
*listw (used in most spdep commands) 
*sn  "spatial neighbor" (used in S-plus?)
*knn "k nearest neighbors object"
*poly "polygons", like a map

*Many commands exist to convert one way of storing contiguity information into another, e.g.
poly2nb(object)   #convert polygon to nb
nb2listw(object)  #convert nb to listw

#moran(variable, listw, no. regions, sum of weights)
moran(NCVACO$SALESPC,nb2listw(queen.nb), length(NCVACO$SALESPC), Szero(nb2listw(queen.nb)))
moran.test(NCVACO$SALESPC,nb2listw(queen.nb))


*You can also make k nearest neighbors weights in R.  I am not a fan of these.  e.g., you can make a 4 nearest neigbors contiguity object by:
#download the rgeos library first!
library(rgeos)
NC.centroids=gCentroid(NCVACO,byid=TRUE)
NCVA.4nn.nb=knn2nb(knearneigh(NC.centroids,k=4),row.names=NCVACO$FIPS)
summary(NCVA.4nn.nb)

